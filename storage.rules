rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isValidFileType() {
      return request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('image/.*') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document');
    }
    
    function isValidFileSize() {
      return request.resource.size < 5 * 1024 * 1024; // 5MB
    }

    // Policy documents
    match /policies/{userId}/documents/{fileName} {
      allow read, write: if isAuthenticated() && isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Claim documents
    match /claims/{userId}/documents/{fileName} {
      allow read, write: if isAuthenticated() && isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // General documents (fallback)
    match /{entityType}/{userId}/documents/{fileName} {
      allow read, write: if isAuthenticated() && isOwner(userId) && isValidFileType() && isValidFileSize();
      allow delete: if isAuthenticated() && isOwner(userId);
    }
  }
} 