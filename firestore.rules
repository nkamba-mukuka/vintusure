rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isAgent() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agent';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Customers collection
    match /customers/{customerId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && (isAdmin() || isAgent());
    }

    // Policies collection
    match /policies/{policyId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated() && (isAdmin() || isAgent());
      allow delete: if isAdmin();
    }

    // Claims collection
    match /claims/{claimId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && (isAdmin() || isAgent());
      allow update: if isAuthenticated() && (isAdmin() || isAgent());
      allow delete: if isAdmin();
    }

    // Documents collection
    match /documents/{documentId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && (isAdmin() || isAgent());
      allow update: if isAuthenticated() && (isAdmin() || isAgent());
      allow delete: if isAdmin();
    }
  }
} 